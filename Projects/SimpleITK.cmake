set(EP_REQUIRED_PROJECTS ITK SWIG)
set(EP_URL "git://itk.org/SimpleITK.git")

cma_list(APPEND EP_REQUIRED_PROJECTS VTK IF PROJECTS_VTK)

cma_envvar(@LIBRARYPATH@ PREPEND "@BINARY_DIR@/lib")
cma_envvar(PYTHONPATH PREPEND
  "@BINARY_DIR@/lib"
  "@BINARY_DIR@/Wrapping")

if(PROJECTS_VTK)
  set(EP_PATCH "${CMAKE_CURRENT_LIST_DIR}/Patches/${EP_NAME}.patch")
endif()

cma_end_definition()
# -----------------------------------------------------------------------------

set(EP_CMAKE_ARGS
  -DBUILD_TESTING:BOOL=OFF
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
  -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
  -DITK_DIR:PATH=${PROJECT_BINARY_DIR}/ITK-build
  -DPYTHON_EXECUTABLE:FILEPATH=${PYTHON_EXECUTABLE}
  -DPYTHON_INCLUDE_DIR:PATH=${PYTHON_INCLUDE_DIR}
  -DSWIG_DIR:PATH=${SWIG_DIR}
  -DSWIG_EXECUTABLE:FILEPATH=${SWIG_EXECUTABLE}
  -DSWIG_VERSION:STRING=${SWIG_VERSION}
  -DWRAP_CSHARP:BOOL=OFF
  -DWRAP_JAVA:BOOL=OFF
  -DWRAP_LUA:BOOL=OFF
  -DWRAP_PYTHON:BOOL=ON
  -DWRAP_R:BOOL=OFF
  -DWRAP_RUBY:BOOL=OFF
  -DWRAP_TCL:BOOL=OFF)

if(PROJECTS_VTK)
  list(APPEND EP_CMAKE_ARGS -DVTK_DIR:PATH=${PROJECT_BINARY_DIR}/VTK-build)
endif()

ExternalProject_Add(${EP_NAME}
  DEPENDS ${EP_REQUIRED_PROJECTS}
  # download
  GIT_REPOSITORY ${EP_URL}
  GIT_TAG v0.8.0
  # patch
  # update
  # configure
  SOURCE_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}
  CMAKE_ARGS ${EP_CMAKE_ARGS}
  # build
  BINARY_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}-build
  # install
  INSTALL_COMMAND ""
  # test
  )
